553b97ac97be5af9d08267e12c536c85
"use strict";

/* istanbul ignore next */
function cov_1qd89351yq() {
  var path = "E:\\Projects\\react-use-hook\\src\\hooks\\useOpenLibrary.tsx";
  var hash = "b95dfbe8aa3d1e1e5167c00389507b8c5fe4ec13";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\Projects\\react-use-hook\\src\\hooks\\useOpenLibrary.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 22
        },
        end: {
          line: 4,
          column: 1
        }
      },
      "1": {
        start: {
          line: 3,
          column: 4
        },
        end: {
          line: 3,
          column: 62
        }
      },
      "2": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 62
        }
      },
      "3": {
        start: {
          line: 6,
          column: 16
        },
        end: {
          line: 6,
          column: 32
        }
      },
      "4": {
        start: {
          line: 7,
          column: 29
        },
        end: {
          line: 7,
          column: 82
        }
      },
      "5": {
        start: {
          line: 8,
          column: 23
        },
        end: {
          line: 44,
          column: 1
        }
      },
      "6": {
        start: {
          line: 9,
          column: 30
        },
        end: {
          line: 9,
          column: 55
        }
      },
      "7": {
        start: {
          line: 10,
          column: 36
        },
        end: {
          line: 10,
          column: 64
        }
      },
      "8": {
        start: {
          line: 11,
          column: 32
        },
        end: {
          line: 11,
          column: 60
        }
      },
      "9": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 12,
          column: 48
        }
      },
      "10": {
        start: {
          line: 13,
          column: 22
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "11": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 25
        }
      },
      "12": {
        start: {
          line: 15,
          column: 8
        },
        end: {
          line: 15,
          column: 24
        }
      },
      "13": {
        start: {
          line: 16,
          column: 8
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "14": {
        start: {
          line: 17,
          column: 27
        },
        end: {
          line: 17,
          column: 73
        }
      },
      "15": {
        start: {
          line: 18,
          column: 12
        },
        end: {
          line: 18,
          column: 29
        }
      },
      "16": {
        start: {
          line: 21,
          column: 12
        },
        end: {
          line: 21,
          column: 27
        }
      },
      "17": {
        start: {
          line: 22,
          column: 12
        },
        end: {
          line: 22,
          column: 31
        }
      },
      "18": {
        start: {
          line: 25,
          column: 12
        },
        end: {
          line: 25,
          column: 30
        }
      },
      "19": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 42,
          column: 16
        }
      },
      "20": {
        start: {
          line: 29,
          column: 8
        },
        end: {
          line: 38,
          column: 9
        }
      },
      "21": {
        start: {
          line: 30,
          column: 12
        },
        end: {
          line: 30,
          column: 25
        }
      },
      "22": {
        start: {
          line: 31,
          column: 12
        },
        end: {
          line: 31,
          column: 19
        }
      },
      "23": {
        start: {
          line: 34,
          column: 12
        },
        end: {
          line: 34,
          column: 45
        }
      },
      "24": {
        start: {
          line: 35,
          column: 12
        },
        end: {
          line: 37,
          column: 20
        }
      },
      "25": {
        start: {
          line: 36,
          column: 16
        },
        end: {
          line: 36,
          column: 28
        }
      },
      "26": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 41,
          column: 10
        }
      },
      "27": {
        start: {
          line: 40,
          column: 12
        },
        end: {
          line: 40,
          column: 45
        }
      },
      "28": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 43,
          column: 41
        }
      },
      "29": {
        start: {
          line: 45,
          column: 0
        },
        end: {
          line: 45,
          column: 33
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 2,
            column: 57
          }
        },
        loc: {
          start: {
            line: 2,
            column: 71
          },
          end: {
            line: 4,
            column: 1
          }
        },
        line: 2
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 8,
            column: 23
          },
          end: {
            line: 8,
            column: 24
          }
        },
        loc: {
          start: {
            line: 8,
            column: 34
          },
          end: {
            line: 44,
            column: 1
          }
        },
        line: 8
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 13,
            column: 22
          },
          end: {
            line: 13,
            column: 23
          }
        },
        loc: {
          start: {
            line: 13,
            column: 34
          },
          end: {
            line: 27,
            column: 5
          }
        },
        line: 13
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 28,
            column: 27
          },
          end: {
            line: 28,
            column: 28
          }
        },
        loc: {
          start: {
            line: 28,
            column: 33
          },
          end: {
            line: 42,
            column: 5
          }
        },
        line: 28
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 35,
            column: 44
          },
          end: {
            line: 35,
            column: 45
          }
        },
        loc: {
          start: {
            line: 35,
            column: 50
          },
          end: {
            line: 37,
            column: 13
          }
        },
        line: 35
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 39,
            column: 15
          },
          end: {
            line: 39,
            column: 16
          }
        },
        loc: {
          start: {
            line: 39,
            column: 21
          },
          end: {
            line: 41,
            column: 9
          }
        },
        line: 39
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 2,
            column: 22
          },
          end: {
            line: 4,
            column: 1
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 2,
            column: 23
          },
          end: {
            line: 2,
            column: 27
          }
        }, {
          start: {
            line: 2,
            column: 31
          },
          end: {
            line: 2,
            column: 51
          }
        }, {
          start: {
            line: 2,
            column: 56
          },
          end: {
            line: 4,
            column: 1
          }
        }],
        line: 2
      },
      "1": {
        loc: {
          start: {
            line: 3,
            column: 11
          },
          end: {
            line: 3,
            column: 61
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 3,
            column: 37
          },
          end: {
            line: 3,
            column: 40
          }
        }, {
          start: {
            line: 3,
            column: 43
          },
          end: {
            line: 3,
            column: 61
          }
        }],
        line: 3
      },
      "2": {
        loc: {
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 33
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 3,
            column: 12
          },
          end: {
            line: 3,
            column: 15
          }
        }, {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 33
          }
        }],
        line: 3
      },
      "3": {
        loc: {
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 8
          },
          end: {
            line: 38,
            column: 9
          }
        }, {
          start: {
            line: 33,
            column: 13
          },
          end: {
            line: 38,
            column: 9
          }
        }],
        line: 29
      },
      "4": {
        loc: {
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 29,
            column: 12
          },
          end: {
            line: 29,
            column: 18
          }
        }, {
          start: {
            line: 29,
            column: 22
          },
          end: {
            line: 29,
            column: 41
          }
        }],
        line: 29
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0]
    },
    inputSourceMap: {
      file: "E:\\Projects\\react-use-hook\\src\\hooks\\useOpenLibrary.tsx",
      mappings: ";;;;;AAAA,iCAAkD;AAClD,mFAA2D;AAE3D,MAAM,cAAc,GAAG,CAAC,KAAa,EAAE,EAAE;IACrC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,IAAA,gBAAQ,EAAC,EAAE,CAAC,CAAC;IACvC,MAAM,CAAC,SAAS,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAU,KAAK,CAAC,CAAC;IACzD,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,IAAA,gBAAQ,EAAU,KAAK,CAAC,CAAC;IACrD,MAAM,UAAU,GAAG,IAAA,cAAM,EAAM,IAAI,CAAC,CAAC;IAErC,MAAM,SAAS,GAAG,KAAK,IAAI,EAAE;QACzB,UAAU,CAAC,IAAI,CAAC,CAAC;QACjB,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEhB,IAAI;YACA,MAAM,MAAM,GAAG,MAAM,IAAA,4BAAkB,EAAC,KAAK,CAAC,CAAC;YAE/C,QAAQ,CAAC,MAAM,CAAC,CAAC;SACpB;QAAC,OAAO,KAAK,EAAE;YACZ,QAAQ,CAAC,IAAI,CAAC,CAAC;YACf,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACtB;gBAAS;YACN,UAAU,CAAC,KAAK,CAAC,CAAC;SACrB;IACL,CAAC,CAAC;IAEF,IAAA,iBAAS,EAAC,GAAG,EAAE;QACX,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;YAC/B,QAAQ,CAAC,EAAE,CAAC,CAAC;YAEb,OAAO;SACV;aAAM;YACH,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACjC,UAAU,CAAC,OAAO,GAAG,UAAU,CAAC,GAAG,EAAE;gBACjC,SAAS,EAAE,CAAC;YAChB,CAAC,EAAE,GAAG,CAAC,CAAC;SACX;QAED,OAAO,GAAG,EAAE;YACR,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACrC,CAAC,CAAC;IACN,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;IAEZ,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC;AACzC,CAAC,CAAC;AAEF,kBAAe,cAAc,CAAC",
      names: [],
      sources: ["E:\\Projects\\react-use-hook\\src\\hooks\\useOpenLibrary.tsx"],
      sourcesContent: ["import {useEffect, useRef, useState} from \"react\";\r\nimport fetchIsOpenLibrary from \"../api/fetchIsOpenLibrary\";\r\n\r\nconst useOpenLibrary = (query: string) => {\r\n    const [books, setBooks] = useState([]);\r\n    const [isLoading, setLoading] = useState<boolean>(false);\r\n    const [isError, setError] = useState<boolean>(false);\r\n    const timeoutRef = useRef<any>(null);\r\n\r\n    const fetchData = async () => {\r\n        setLoading(true);\r\n        setError(false);\r\n\r\n        try {\r\n            const result = await fetchIsOpenLibrary(query);\r\n\r\n            setBooks(result);\r\n        } catch (error) {\r\n            setError(true);\r\n            console.log(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!query || query.trim() === '') {\r\n            setBooks([]);\r\n\r\n            return;\r\n        } else {\r\n            clearTimeout(timeoutRef.current);\r\n            timeoutRef.current = setTimeout(() => {\r\n                fetchData();\r\n            }, 500);\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(timeoutRef.current);\r\n        };\r\n    }, [query]);\r\n\r\n    return { books, isLoading, isError };\r\n};\r\n\r\nexport default useOpenLibrary;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "b95dfbe8aa3d1e1e5167c00389507b8c5fe4ec13"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1qd89351yq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1qd89351yq();
var __importDefault =
/* istanbul ignore next */
(cov_1qd89351yq().s[0]++,
/* istanbul ignore next */
(cov_1qd89351yq().b[0][0]++, this) &&
/* istanbul ignore next */
(cov_1qd89351yq().b[0][1]++, this.__importDefault) ||
/* istanbul ignore next */
(cov_1qd89351yq().b[0][2]++, function (mod) {
  /* istanbul ignore next */
  cov_1qd89351yq().f[0]++;
  cov_1qd89351yq().s[1]++;
  return (
    /* istanbul ignore next */
    (cov_1qd89351yq().b[2][0]++, mod) &&
    /* istanbul ignore next */
    (cov_1qd89351yq().b[2][1]++, mod.__esModule) ?
    /* istanbul ignore next */
    (cov_1qd89351yq().b[1][0]++, mod) :
    /* istanbul ignore next */
    (cov_1qd89351yq().b[1][1]++, {
      "default": mod
    })
  );
}));
/* istanbul ignore next */
cov_1qd89351yq().s[2]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
const react_1 =
/* istanbul ignore next */
(cov_1qd89351yq().s[3]++, require("react"));
const fetchIsOpenLibrary_1 =
/* istanbul ignore next */
(cov_1qd89351yq().s[4]++, __importDefault(require("../api/fetchIsOpenLibrary")));
/* istanbul ignore next */
cov_1qd89351yq().s[5]++;
const useOpenLibrary = query => {
  /* istanbul ignore next */
  cov_1qd89351yq().f[1]++;
  const [books, setBooks] =
  /* istanbul ignore next */
  (cov_1qd89351yq().s[6]++, (0, react_1.useState)([]));
  const [isLoading, setLoading] =
  /* istanbul ignore next */
  (cov_1qd89351yq().s[7]++, (0, react_1.useState)(false));
  const [isError, setError] =
  /* istanbul ignore next */
  (cov_1qd89351yq().s[8]++, (0, react_1.useState)(false));
  const timeoutRef =
  /* istanbul ignore next */
  (cov_1qd89351yq().s[9]++, (0, react_1.useRef)(null));
  /* istanbul ignore next */
  cov_1qd89351yq().s[10]++;
  const fetchData = async () => {
    /* istanbul ignore next */
    cov_1qd89351yq().f[2]++;
    cov_1qd89351yq().s[11]++;
    setLoading(true);
    /* istanbul ignore next */
    cov_1qd89351yq().s[12]++;
    setError(false);
    /* istanbul ignore next */
    cov_1qd89351yq().s[13]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_1qd89351yq().s[14]++, await (0, fetchIsOpenLibrary_1.default)(query));
      /* istanbul ignore next */
      cov_1qd89351yq().s[15]++;
      setBooks(result);
    } catch (error) {
      /* istanbul ignore next */
      cov_1qd89351yq().s[16]++;
      setError(true);
      /* istanbul ignore next */
      cov_1qd89351yq().s[17]++;
      console.log(error);
    } finally {
      /* istanbul ignore next */
      cov_1qd89351yq().s[18]++;
      setLoading(false);
    }
  };
  /* istanbul ignore next */
  cov_1qd89351yq().s[19]++;
  (0, react_1.useEffect)(() => {
    /* istanbul ignore next */
    cov_1qd89351yq().f[3]++;
    cov_1qd89351yq().s[20]++;
    if (
    /* istanbul ignore next */
    (cov_1qd89351yq().b[4][0]++, !query) ||
    /* istanbul ignore next */
    (cov_1qd89351yq().b[4][1]++, query.trim() === '')) {
      /* istanbul ignore next */
      cov_1qd89351yq().b[3][0]++;
      cov_1qd89351yq().s[21]++;
      setBooks([]);
      /* istanbul ignore next */
      cov_1qd89351yq().s[22]++;
      return;
    } else {
      /* istanbul ignore next */
      cov_1qd89351yq().b[3][1]++;
      cov_1qd89351yq().s[23]++;
      clearTimeout(timeoutRef.current);
      /* istanbul ignore next */
      cov_1qd89351yq().s[24]++;
      timeoutRef.current = setTimeout(() => {
        /* istanbul ignore next */
        cov_1qd89351yq().f[4]++;
        cov_1qd89351yq().s[25]++;
        fetchData();
      }, 500);
    }
    /* istanbul ignore next */
    cov_1qd89351yq().s[26]++;
    return () => {
      /* istanbul ignore next */
      cov_1qd89351yq().f[5]++;
      cov_1qd89351yq().s[27]++;
      clearTimeout(timeoutRef.current);
    };
  }, [query]);
  /* istanbul ignore next */
  cov_1qd89351yq().s[28]++;
  return {
    books,
    isLoading,
    isError
  };
};
/* istanbul ignore next */
cov_1qd89351yq().s[29]++;
exports.default = useOpenLibrary;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXFkODkzNTF5cSIsImFjdHVhbENvdmVyYWdlIiwicmVhY3RfMSIsInMiLCJyZXF1aXJlIiwiZmV0Y2hJc09wZW5MaWJyYXJ5XzEiLCJfX2ltcG9ydERlZmF1bHQiLCJ1c2VPcGVuTGlicmFyeSIsInF1ZXJ5IiwiZiIsImJvb2tzIiwic2V0Qm9va3MiLCJ1c2VTdGF0ZSIsImlzTG9hZGluZyIsInNldExvYWRpbmciLCJpc0Vycm9yIiwic2V0RXJyb3IiLCJ0aW1lb3V0UmVmIiwidXNlUmVmIiwiZmV0Y2hEYXRhIiwicmVzdWx0IiwiZGVmYXVsdCIsImVycm9yIiwiY29uc29sZSIsImxvZyIsInVzZUVmZmVjdCIsImIiLCJ0cmltIiwiY2xlYXJUaW1lb3V0IiwiY3VycmVudCIsInNldFRpbWVvdXQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiRTpcXFByb2plY3RzXFxyZWFjdC11c2UtaG9va1xcc3JjXFxob29rc1xcdXNlT3BlbkxpYnJhcnkudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7dXNlRWZmZWN0LCB1c2VSZWYsIHVzZVN0YXRlfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IGZldGNoSXNPcGVuTGlicmFyeSBmcm9tIFwiLi4vYXBpL2ZldGNoSXNPcGVuTGlicmFyeVwiO1xyXG5cclxuY29uc3QgdXNlT3BlbkxpYnJhcnkgPSAocXVlcnk6IHN0cmluZykgPT4ge1xyXG4gICAgY29uc3QgW2Jvb2tzLCBzZXRCb29rc10gPSB1c2VTdGF0ZShbXSk7XHJcbiAgICBjb25zdCBbaXNMb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcclxuICAgIGNvbnN0IFtpc0Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTxib29sZWFuPihmYWxzZSk7XHJcbiAgICBjb25zdCB0aW1lb3V0UmVmID0gdXNlUmVmPGFueT4obnVsbCk7XHJcblxyXG4gICAgY29uc3QgZmV0Y2hEYXRhID0gYXN5bmMgKCkgPT4ge1xyXG4gICAgICAgIHNldExvYWRpbmcodHJ1ZSk7XHJcbiAgICAgICAgc2V0RXJyb3IoZmFsc2UpO1xyXG5cclxuICAgICAgICB0cnkge1xyXG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBhd2FpdCBmZXRjaElzT3BlbkxpYnJhcnkocXVlcnkpO1xyXG5cclxuICAgICAgICAgICAgc2V0Qm9va3MocmVzdWx0KTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBzZXRFcnJvcih0cnVlKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xyXG4gICAgICAgIH0gZmluYWxseSB7XHJcbiAgICAgICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xyXG4gICAgICAgIH1cclxuICAgIH07XHJcblxyXG4gICAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgICAgICBpZiAoIXF1ZXJ5IHx8IHF1ZXJ5LnRyaW0oKSA9PT0gJycpIHtcclxuICAgICAgICAgICAgc2V0Qm9va3MoW10pO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0UmVmLmN1cnJlbnQpO1xyXG4gICAgICAgICAgICB0aW1lb3V0UmVmLmN1cnJlbnQgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGZldGNoRGF0YSgpO1xyXG4gICAgICAgICAgICB9LCA1MDApO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmV0dXJuICgpID0+IHtcclxuICAgICAgICAgICAgY2xlYXJUaW1lb3V0KHRpbWVvdXRSZWYuY3VycmVudCk7XHJcbiAgICAgICAgfTtcclxuICAgIH0sIFtxdWVyeV0pO1xyXG5cclxuICAgIHJldHVybiB7IGJvb2tzLCBpc0xvYWRpbmcsIGlzRXJyb3IgfTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHVzZU9wZW5MaWJyYXJ5O1xyXG4iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBYVk7SUFBQUEsY0FBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsY0FBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWJaLE1BQUFFLE9BQUE7QUFBQTtBQUFBLENBQUFGLGNBQUEsR0FBQUcsQ0FBQSxPQUFBQyxPQUFBO0FBQ0EsTUFBQUMsb0JBQUE7QUFBQTtBQUFB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