8aa0107beda6d40bea7b0e1b38e66904
"use strict";

/* istanbul ignore next */
function cov_u5k19zno3() {
  var path = "E:\\Projects\\react-use-hook\\src\\api\\fetchIsOpenLibrary.tsx";
  var hash = "410d8ffff63fe292be7a44d294a1558c3215335a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "E:\\Projects\\react-use-hook\\src\\api\\fetchIsOpenLibrary.tsx",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 27
        },
        end: {
          line: 13,
          column: 1
        }
      },
      "2": {
        start: {
          line: 5,
          column: 4
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "3": {
        start: {
          line: 6,
          column: 25
        },
        end: {
          line: 6,
          column: 86
        }
      },
      "4": {
        start: {
          line: 7,
          column: 23
        },
        end: {
          line: 7,
          column: 44
        }
      },
      "5": {
        start: {
          line: 8,
          column: 8
        },
        end: {
          line: 8,
          column: 27
        }
      },
      "6": {
        start: {
          line: 11,
          column: 8
        },
        end: {
          line: 11,
          column: 20
        }
      },
      "7": {
        start: {
          line: 14,
          column: 0
        },
        end: {
          line: 14,
          column: 37
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 3,
            column: 27
          },
          end: {
            line: 3,
            column: 28
          }
        },
        loc: {
          start: {
            line: 3,
            column: 44
          },
          end: {
            line: 13,
            column: 1
          }
        },
        line: 3
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    f: {
      "0": 0
    },
    b: {},
    inputSourceMap: {
      file: "E:\\Projects\\react-use-hook\\src\\api\\fetchIsOpenLibrary.tsx",
      mappings: ";;AAAA,MAAM,kBAAkB,GAAG,KAAK,EAAE,KAAa,EAAE,EAAE;IAC/C,4CAA4C;IAC5C,IAAI;QACA,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,yCAAyC,KAAK,EAAE,CAAC,CAAC;QAC/E,MAAM,MAAM,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;QAErC,OAAO,MAAM,CAAC,IAAI,CAAC;KACtB;IAAC,OAAO,KAAK,EAAE;QACZ,MAAM,KAAK,CAAC;KACf;AACL,CAAC,CAAC;AAEF,kBAAe,kBAAkB,CAAC",
      names: [],
      sources: ["E:\\Projects\\react-use-hook\\src\\api\\fetchIsOpenLibrary.tsx"],
      sourcesContent: ["const fetchIsOpenLibrary = async (query: string) => {\r\n    // eslint-disable-next-line no-useless-catch\r\n    try {\r\n        const response = await fetch(`https://openlibrary.org/search.json?q=${query}`);\r\n        const result = await response.json();\r\n\r\n        return result.docs;\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};\r\n\r\nexport default fetchIsOpenLibrary;\r\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "410d8ffff63fe292be7a44d294a1558c3215335a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_u5k19zno3 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_u5k19zno3();
cov_u5k19zno3().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});
/* istanbul ignore next */
cov_u5k19zno3().s[1]++;
const fetchIsOpenLibrary = async query => {
  /* istanbul ignore next */
  cov_u5k19zno3().f[0]++;
  cov_u5k19zno3().s[2]++;
  // eslint-disable-next-line no-useless-catch
  try {
    const response =
    /* istanbul ignore next */
    (cov_u5k19zno3().s[3]++, await fetch(`https://openlibrary.org/search.json?q=${query}`));
    const result =
    /* istanbul ignore next */
    (cov_u5k19zno3().s[4]++, await response.json());
    /* istanbul ignore next */
    cov_u5k19zno3().s[5]++;
    return result.docs;
  } catch (error) {
    /* istanbul ignore next */
    cov_u5k19zno3().s[6]++;
    throw error;
  }
};
/* istanbul ignore next */
cov_u5k19zno3().s[7]++;
exports.default = fetchIsOpenLibrary;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJmZXRjaElzT3BlbkxpYnJhcnkiLCJxdWVyeSIsImNvdl91NWsxOXpubzMiLCJmIiwicyIsInJlc3BvbnNlIiwiZmV0Y2giLCJyZXN1bHQiLCJqc29uIiwiZG9jcyIsImVycm9yIiwiZXhwb3J0cyIsImRlZmF1bHQiXSwic291cmNlcyI6WyJFOlxcUHJvamVjdHNcXHJlYWN0LXVzZS1ob29rXFxzcmNcXGFwaVxcZmV0Y2hJc09wZW5MaWJyYXJ5LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBmZXRjaElzT3BlbkxpYnJhcnkgPSBhc3luYyAocXVlcnk6IHN0cmluZykgPT4ge1xyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVzZWxlc3MtY2F0Y2hcclxuICAgIHRyeSB7XHJcbiAgICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgaHR0cHM6Ly9vcGVubGlicmFyeS5vcmcvc2VhcmNoLmpzb24/cT0ke3F1ZXJ5fWApO1xyXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdC5kb2NzO1xyXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICB0aHJvdyBlcnJvcjtcclxuICAgIH1cclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZldGNoSXNPcGVuTGlicmFyeTtcclxuIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLE1BQU1BLGtCQUFrQixHQUFHLE1BQU9DLEtBQWEsSUFBSTtFQUFBO0VBQUFDLGFBQUEsR0FBQUMsQ0FBQTtFQUFBRCxhQUFBLEdBQUFFLENBQUE7RUFDL0M7RUFDQSxJQUFJO0lBQ0EsTUFBTUMsUUFBUTtJQUFBO0lBQUEsQ0FBQUgsYUFBQSxHQUFBRSxDQUFBLE9BQUcsTUFBTUUsS0FBSyxDQUFDLHlDQUF5Q0wsS0FBSyxFQUFFLENBQUM7SUFDOUUsTUFBTU0sTUFBTTtJQUFBO0lBQUEsQ0FBQUwsYUFBQSxHQUFBRSxDQUFBLE9BQUcsTUFBTUMsUUFBUSxDQUFDRyxJQUFJLEVBQUU7SUFBQztJQUFBTixhQUFBLEdBQUFFLENBQUE7SUFFckMsT0FBT0csTUFBTSxDQUFDRSxJQUFJO0dBQ3JCLENBQUMsT0FBT0MsS0FBSyxFQUFFO0lBQUE7SUFBQVIsYUFBQSxHQUFBRSxDQUFBO0lBQ1osTUFBTU0sS0FBSzs7QUFFbkIsQ0FBQztBQUFDO0FBQUFSLGFBQUEsR0FBQUUsQ0FBQTtBQUVGTyxPQUFBLENBQUFDLE9BQUEsR0FBZVosa0JBQWtCIn0=